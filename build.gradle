plugins {
    id 'org.springframework.boot' version '3.5.0'
    id 'java'
    id 'base'
}

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-websocket:3.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.5.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
    implementation 'com.github.oshi:oshi-core:6.6.5' 
    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    runtimeOnly 'org.postgresql:postgresql:42.7.3'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.5.0'
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
}

springBoot {
    mainClass = 'studio.lab9.socks.SocksApplication'
}

tasks.named('build') {
    // dependsOn test
}

tasks.named('bootRun') {
    mainClass = 'studio.lab9.socks.SocksApplication'
}

base {
    archivesName.set('socks')
}

tasks.named('test') {
    useJUnitPlatform()
    // ignoreFailures = true

    jvmArgs "-javaagent:${configurations.testRuntimeClasspath.find { it.name.contains('mockito-core') }}", '-Xshare:off'
    
    systemProperty 'java.util.logging.ConsoleHandler.level', 'FINE'
    testLogging {
        // events 'passed', 'skipped', 'failed'
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}
